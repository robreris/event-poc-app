AWSTemplateFormatVersion: '2010-09-09'
Description: Roles for EFS CSI, ESO, and ALB Ingress add-ons

Parameters:
  ClusterName:
    Type: String
    Description: Name of the EKS cluster
  OIDCId:
    Type: String 
    Description: ID of OIDC provider
  Namespace:
    Type: String
    Description: ESO namespace

Resources:

  # EFS CSI Driver Role
  EFSCSIRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ClusterName}-efs-csi-driver"
      AssumeRolePolicyDocument:
        Fn::Sub: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/oidc.eks.${AWS::Region}.amazonaws.com/id/${OIDCId}"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                "Condition": {
                  "StringLike": {
                    "oidc.eks.${AWS::Region}.amazonaws.com/id/${OIDCId}:sub": "system:serviceaccount:kube-system:efs-csi-controller-sa*",
                    "oidc.eks.${AWS::Region}.amazonaws.com/id/${OIDCId}:aud": "sts.amazonaws.com"
                  }
                }
              }
            ]
          }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEFSCSIDriverPolicy

  # External Secrets Operator Role
  ESORole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ClusterName}-external-secrets"
      AssumeRolePolicyDocument:
        Fn::Sub: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/oidc.eks.${AWS::Region}.amazonaws.com/id/${OIDCId}"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                "Condition": {
                  "StringLike": {
                    "oidc.eks.${AWS::Region}.amazonaws.com/id/${OIDCId}:sub": "system:serviceaccount:${Namespace}:eso-sa*",
                    "oidc.eks.${AWS::Region}.amazonaws.com/id/${OIDCId}:aud": "sts.amazonaws.com"
                  }
                }
              }
            ]
          }
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - secretsmanager:GetSecretValue
                Resource: "*"

  # ALB Ingress Controller Role
  ALBIngressRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ClusterName}-alb-ingress"
      AssumeRolePolicyDocument:
        Fn::Sub: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/oidc.eks.${AWS::Region}.amazonaws.com/id/${OIDCId}"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                "Condition": {
                  "StringLike": {
                    "oidc.eks.${AWS::Region}.amazonaws.com/id/${OIDCId}:sub": "system:serviceaccount:kube-system:aws-alb-ingress-controller*",
                    "oidc.eks.${AWS::Region}.amazonaws.com/id/${OIDCId}:aud": "sts.amazonaws.com"
                  }
                }
              }
            ]
          }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess

Outputs:
  EFSCSIRoleArn:
    Value: !GetAtt EFSCSIRole.Arn
  ESORoleArn:
    Value: !GetAtt ESORole.Arn
  ALBIngressRoleArn:
    Value: !GetAtt ALBIngressRole.Arn
